LIBS_mod =
CFLAGS_mod = -pipe -Werror -Wall -Wextra -Wno-unused -g -fPIC -I. -DSURGEBOT_MODULE
CXXFLAGS_mod = -pipe -Werror -Wall -Wextra -Wno-unused -g -fPIC -I. -DSURGEBOT_MODULE
LDFLAGS_mod = -shared

SRC_mod = $(wildcard modules/$(MODULE)/*.c)
SRCX_mod = $(wildcard modules/$(MODULE)/*.cc)
OBJ_mod = $(patsubst %.c,.tmp/%.o,$(SRC_mod))
OBJX_mod = $(patsubst %.cc,.tmp/%.oo,$(SRCX_mod))
DEP_mod = $(patsubst %.c,.tmp/%.d,$(SRC_mod))
DEPX_mod = $(patsubst %.cc,.tmp/%.dd,$(SRCX_mod))
LIB_mod	= modules/$(MODULE).so
TMPDIR = .tmp/modules/$(MODULE)

-include modules/$(MODULE)/Makefile.in

.PHONY: all clean

all: $(TMPDIR) $(LIB_mod)

clean:
ifdef NOCOLOR
	@printf "   CLEANMOD  %s\n" $(MODULE)
else
	@printf "   \033[38;5;154mCLEANMOD\033[0m  %s\n" $(MODULE)
endif
	@rm -f $(TMPDIR)/*.d $(TMPDIR)/*.dd $(TMPDIR)/*.o $(TMPDIR)/*.oo $(LIB_mod)

# rule for creating final binary
$(LIB_mod): $(OBJ_mod) $(OBJX_mod)
ifdef NOCOLOR
	@printf "   LD        [%s] %s\n" $(MODULE) $@
else
	@printf "   \033[38;5;69mLD\033[0m        [\033[38;5;220m%s\033[0m] %s\n" $(MODULE) $@
endif
	$(CC) $(LDFLAGS_mod) $(LIBS_mod) $(OBJ_mod) $(OBJX_mod) -o $(LIB_mod)

# rule for creating object files
$(OBJ_mod) : $(TMPDIR)/%.o : modules/$(MODULE)/%.c
ifdef NOCOLOR
	@printf "   CC        $(patsubst modules/$(MODULE)/%,[\033[38;5;220m$(MODULE)\033[0m] %,$(<:.c=.o))\n"
else
	@printf "   \033[38;5;33mCC\033[0m        $(patsubst modules/$(MODULE)/%,[\033[38;5;220m$(MODULE)\033[0m] %,$(<:.c=.o))\n"
endif
	@$(CC) $(CFLAGS_mod) -std=gnu99 -MMD -MF .tmp/$(<:.c=.d) -MT $@ -o $@ -c $<
	@cp -f $(TMPDIR)/$*.d $(TMPDIR)/$*.d.tmp
	@sed -e 's/.*://' -e 's/\\$$//' < $(TMPDIR)/$*.d.tmp | fmt -1 | sed -e 's/^ *//' -e 's/$$/:/' >> $(TMPDIR)/$*.d
	@rm -f $(TMPDIR)/$*.d.tmp


# rule for creating object files (c++)
$(OBJX_mod) : $(TMPDIR)/%.oo : modules/$(MODULE)/%.cc
ifdef NOCOLOR
	@printf "   CXX       $(patsubst modules/$(MODULE)/%,[\033[38;5;220m$(MODULE)\033[0m] %,$(<:.cc=.oo))\n"
else
	@printf "   \033[38;5;37mCXX\033[0m       $(patsubst modules/$(MODULE)/%,[\033[38;5;220m$(MODULE)\033[0m] %,$(<:.cc=.oo))\n"
endif
	@$(CXX) $(CXXFLAGS_mod) -MMD -MF .tmp/$(<:.cc=.dd) -MT $@ -o $@ -c $<
	@cp -f $(TMPDIR)/$*.dd $(TMPDIR)/$*.dd.tmp
	@sed -e 's/.*://' -e 's/\\$$//' < $(TMPDIR)/$*.dd.tmp | fmt -1 | sed -e 's/^ *//' -e 's/$$/:/' >> $(TMPDIR)/$*.dd
	@rm -f $(TMPDIR)/$*.dd.tmp

$(TMPDIR):
	@mkdir -p $(TMPDIR)

# include dependency files
ifneq ($(MAKECMDGOALS),clean)
-include $(DEP_mod) $(DEPX_mod)
endif

# vim: ft=make

